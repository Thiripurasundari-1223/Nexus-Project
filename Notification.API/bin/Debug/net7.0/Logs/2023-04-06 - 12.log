2023-04-06 12:10:50,983 [6] ERROR App  
 --------------------------------------06-04-2023 12:10:50--------------------------------------------------------------- 
 
2023-04-06 12:10:51,069 [6] ERROR App  
 Request and Response: Id: 06042023121049-RequestDateAndTime: 06-04-2023 12:10:49-Request: http localhost:1086/swagger/index.html  __-ResponseDateAndTime: 06-04-2023 12:10:49-Response: 200: <!-- HTML for static distribution bundle build -->_<!DOCTYPE html>_<html lang="en">_<head>_    <meta charset="UTF-8">_    <title>Swagger UI</title>_    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">_    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />_    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />_    <style>__        html {_            box-sizing: border-box;_            overflow: -moz-scrollbars-vertical;_            overflow-y: scroll;_        }__        *,_        *:before,_        *:after {_            box-sizing: inherit;_        }__        body {_            margin: 0;_            background: #fafafa;_        }_    </style>_    _</head>__<body>_    <div id="swagger-ui"></div>__    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->_    <script>_        if (window.navigator.userAgent.indexOf("Edge") > -1) {_            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")_            window.fetch = undefined;_        }_    </script>__    <script src="./swagger-ui-bundle.js"></script>_    <script src="./swagger-ui-standalone-preset.js"></script>_    <script>_        /* Source: https://gist.github.com/lamberta/3768814_         * Parse a string function definition and return a function object. Does not use eval._         * @param {string} str_         * @return {function}_         *_         * Example:_         *  var f = function (x, y) { return x * y; };_         *  var g = parseFunction(f.toString());_         *  g(33, 3); //=> 99_         */_        function parseFunction(str) {_            if (!str) return void (0);__            var fn_body_idx = str.indexOf('{'),_                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),_                fn_declare = str.substring(0, fn_body_idx),_                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),_                args = fn_params.split(',');__            args.push(fn_body);__            function Fn() {_                return Function.apply(this, args);_            }_            Fn.prototype = Function.prototype;__            return new Fn();_        }__        window.onload = function () {_            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"PMS Nexus"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');_            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');__            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945_            configObject.urls.forEach(function (item) {_                if (item.url.startsWith("http") || item.url.startsWith("/")) return;_                item.url = window.location.href.replace("index.html", item.url).split('#')[0];_            });__            // If validatorUrl is not explicitly provided, disable the feature by setting to null_            if (!configObject.hasOwnProperty("validatorUrl"))_                configObject.validatorUrl = null__            // If oauth2RedirectUrl isn't specified, use the built-in default_            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))_                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;__            // Apply mandatory parameters_            configObject.dom_id = "#swagger-ui";_            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];_            configObject.layout = "StandaloneLayout";__            // Parse and add interceptor functions_            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');_            if (interceptors.RequestInterceptorFunction)_                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);_            if (interceptors.ResponseInterceptorFunction)_                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);__            // Begin Swagger UI call region__            const ui = SwaggerUIBundle(configObject);__            ui.initOAuth(oauthConfigObject);__            // End Swagger UI call region__            window.ui = ui_        }_    </script>_</body>_</html>___- 
 
2023-04-06 12:10:51,161 [6] ERROR App  
 ------------------------------------------------------------------------------------------------------------------- 
 
2023-04-06 12:10:55,251 [6] ERROR App  
 --------------------------------------06-04-2023 12:10:55--------------------------------------------------------------- 
 
2023-04-06 12:10:55,262 [6] ERROR App  
 Request and Response: Id: 06042023121054-RequestDateAndTime: 06-04-2023 12:10:54-Request: http localhost:1086/swagger/v1/swagger.json  __-ResponseDateAndTime: 06-04-2023 12:10:55-Response: 200: {_  "openapi": "3.0.1",_  "info": {_    "title": "Notifications API",_    "version": "v1"_  },_  "paths": {_    "/api/Notifications/GetEmptyMethod": {_      "get": {_        "tags": [_          "Notifications"_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/InsertNotifications": {_      "post": {_        "tags": [_          "Notifications"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "type": "array",_                "items": {_                  "$ref": "#/components/schemas/Notifications"_                }_              }_            },_            "text/json": {_              "schema": {_                "type": "array",_                "items": {_                  "$ref": "#/components/schemas/Notifications"_                }_              }_            },_            "application/*+json": {_              "schema": {_                "type": "array",_                "items": {_                  "$ref": "#/components/schemas/Notifications"_                }_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/GetNotificationsByResourceId": {_      "get": {_        "tags": [_          "Notifications"_        ],_        "parameters": [_          {_            "name": "pResourceId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/MarkAllAsReadByResourceId": {_      "post": {_        "tags": [_          "Notifications"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/MarkAsReadByNotificationId": {_      "post": {_        "tags": [_          "Notifications"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetAllStatusList": {_      "get": {_        "tags": [_          "Status"_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetStatusByID": {_      "get": {_        "tags": [_          "Status"_        ],_        "parameters": [_          {_            "name": "pStatusId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetStatusByCode": {_      "get": {_        "tags": [_          "Status"_        ],_        "parameters": [_          {_            "name": "pStatusCode",_            "in": "query",_            "schema": {_              "type": "string"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      },_      "post": {_        "tags": [_          "Status"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "type": "array",_                "items": {_                  "type": "string"_                }_              }_            },_            "text/json": {_              "schema": {_                "type": "array",_                "items": {_                  "type": "string"_                }_              }_            },_            "application/*+json": {_              "schema": {_                "type": "array",_                "items": {_                  "type": "string"_                }_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetStatusByName": {_      "get": {_        "tags": [_          "Status"_        ],_        "parameters": [_          {_            "name": "pStatusCode",_            "in": "query",_            "schema": {_              "type": "string"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/AddSupportingDocuments": {_      "post": {_        "tags": [_          "SupportingDocuments"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/SupportingDocumentsView"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/SupportingDocumentsView"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/SupportingDocumentsView"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/DeleteDocumentById": {_      "get": {_        "tags": [_          "SupportingDocuments"_        ],_        "parameters": [_          {_            "name": "documentId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/GetDocumentBySourceIdAndType": {_      "post": {_        "tags": [_          "SupportingDocuments"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/DownloadDocumentById": {_      "get": {_        "tags": [_          "SupportingDocuments"_        ],_        "parameters": [_          {_            "name": "documentId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/ApprovedDocumentsBySourceIdAndType": {_      "post": {_        "tags": [_          "SupportingDocuments"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/TimesheetConfigurationWeekDay/GetAllWeekDayList": {_      "get": {_        "tags": [_          "TimesheetConfigurationWeekDay"_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/TimesheetConfigurationWeekDay/GetWeekDayByID": {_      "get": {_        "tags": [_          "TimesheetConfigurationWeekDay"_        ],_        "parameters": [_          {_            "name": "pTimesheetConfigurationWeekdayId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/TimesheetConfigurationWeekDay/GetWeekDayByName": {_      "get": {_        "tags": [_          "TimesheetConfigurationWeekDay"_        ],_        "parameters": [_          {_            "name": "pDayName",_            "in": "query",_            "schema": {_              "type": "string"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    }_  },_  "components": {_    "schemas": {_      "DocumentDetails": {_        "type": "object",_        "properties": {_          "documentId": {_            "type": "integer",_            "format": "int32"_          },_          "documentCategory": {_            "type": "string",_            "nullable": true_          },_          "isApproved": {_            "type": "boolean"_          },_          "documentSize": {_            "type": "number",_            "format": "double"_          },_          "documentName": {_            "type": "string",_            "nullable": true_          },_          "documentType": {_            "type": "string",_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "DocumentsToUpload": {_        "type": "object",_        "properties": {_          "documentId": {_            "type": "integer",_            "format": "int32"_          },_          "documentCategory": {_            "type": "string",_            "nullable": true_          },_          "isApproved": {_            "type": "boolean"_          },_          "documentName": {_            "type": "string",_            "nullable": true_          },_          "documentSize": {_            "type": "number",_            "format": "double"_          },_          "documentAsBase64": {_            "type": "string",_            "nullable": true_          },_          "documentAsByteArray": {_            "type": "string",_            "format": "byte",_            "nullable": true_          },_          "path": {_            "type": "string",_            "nullable": true_          },_          "employeeId": {_            "type": "integer",_            "format": "int32"_          },_          "createdOn": {_            "type": "string",_            "format": "date-time",_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "NotificationMarkAsRead": {_        "type": "object",_        "properties": {_          "notificationId": {_            "type": "integer",_            "format": "int32"_          },_          "resourceId": {_            "type": "integer",_            "format": "int32"_          }_        },_        "additionalProperties": false_      },_      "Notifications": {_        "type": "object",_        "properties": {_          "notificationId": {_            "type": "integer",_            "format": "int32"_          },_          "fromId": {_            "type": "integer",_            "format": "int32"_          },_          "toId": {_            "type": "integer",_            "format": "int32"_          },_          "notificationSubject": {_            "type": "string",_            "nullable": true_          },_          "notificationBody": {_            "type": "string",_            "nullable": true_          },_          "markAsRead": {_            "type": "boolean"_          },_          "createdOn": {_            "type": "string",_            "format": "date-time"_          },_          "createdBy": {_            "type": "integer",_            "format": "int32"_          },_          "modifiedOn": {_            "type": "string",_            "format": "date-time",_            "nullable": true_          },_          "modifiedBy": {_            "type": "integer",_            "format": "int32",_            "nullable": true_          },_          "primaryKeyId": {_            "type": "integer",_            "format": "int32",_            "nullable": true_          },_          "buttonName": {_            "type": "string",_            "nullable": true_          },_          "sourceType": {_            "type": "string",_            "nullable": true_          },_          "data": {_            "type": "string",_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "SourceDocuments": {_        "type": "object",_        "properties": {_          "sourceId": {_            "type": "array",_            "items": {_              "type": "integer",_              "format": "int32"_            },_            "nullable": true_          },_          "sourceType": {_            "type": "array",_            "items": {_              "type": "string"_            },_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "SupportingDocumentsView": {_        "type": "object",_        "properties": {_          "listOfDocuments": {_            "type": "array",_            "items": {_              "$ref": "#/components/schemas/DocumentDetails"_            },_            "nullable": true_          },_          "sourceId": {_            "type": "integer",_            "format": "int32"_          },_          "sourceType": {_            "type": "string",_            "nullable": true_          },_          "createdBy": {_            "type": "integer",_            "format": "int32"_          },_          "baseDirectory": {_            "type": "string",_            "nullable": true_          },_          "documentType": {_            "type": "string",_            "nullable": true_          },_          "employeeId": {_            "type": "integer",_            "format": "int32"_          },_          "employeeDocumentList": {_            "type": "array",_            "items": {_              "$ref": "#/components/schemas/DocumentsToUpload"_            },_            "nullable": true_          },_          "proofDocumentId": {_            "type": "string",_            "format": "uuid"_          }_        },_        "additionalProperties": false_      }_    },_    "securitySchemes": {_      "Bearer": {_        "type": "apiKey",_        "description": "JWT Authorization header using the Bearer scheme.",_        "name": "Authorization",_        "in": "header"_      }_    }_  },_  "security": [_    {_      "Bearer": [ ]_    }_  ]_}__- 
 
2023-04-06 12:10:55,332 [6] ERROR App  
 ------------------------------------------------------------------------------------------------------------------- 
 
2023-04-06 12:22:42,401 [4] ERROR App  
 --------------------------------------06-04-2023 12:22:42--------------------------------------------------------------- 
 
2023-04-06 12:22:42,443 [4] ERROR App  
 Request and Response: Id: 06042023122239-RequestDateAndTime: 06-04-2023 12:22:39-Request: http localhost:1086/swagger/index.html  __-ResponseDateAndTime: 06-04-2023 12:22:40-Response: 200: <!-- HTML for static distribution bundle build -->_<!DOCTYPE html>_<html lang="en">_<head>_    <meta charset="UTF-8">_    <title>Swagger UI</title>_    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">_    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />_    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />_    <style>__        html {_            box-sizing: border-box;_            overflow: -moz-scrollbars-vertical;_            overflow-y: scroll;_        }__        *,_        *:before,_        *:after {_            box-sizing: inherit;_        }__        body {_            margin: 0;_            background: #fafafa;_        }_    </style>_    _</head>__<body>_    <div id="swagger-ui"></div>__    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->_    <script>_        if (window.navigator.userAgent.indexOf("Edge") > -1) {_            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")_            window.fetch = undefined;_        }_    </script>__    <script src="./swagger-ui-bundle.js"></script>_    <script src="./swagger-ui-standalone-preset.js"></script>_    <script>_        /* Source: https://gist.github.com/lamberta/3768814_         * Parse a string function definition and return a function object. Does not use eval._         * @param {string} str_         * @return {function}_         *_         * Example:_         *  var f = function (x, y) { return x * y; };_         *  var g = parseFunction(f.toString());_         *  g(33, 3); //=> 99_         */_        function parseFunction(str) {_            if (!str) return void (0);__            var fn_body_idx = str.indexOf('{'),_                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),_                fn_declare = str.substring(0, fn_body_idx),_                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),_                args = fn_params.split(',');__            args.push(fn_body);__            function Fn() {_                return Function.apply(this, args);_            }_            Fn.prototype = Function.prototype;__            return new Fn();_        }__        window.onload = function () {_            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"PMS Nexus"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');_            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');__            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945_            configObject.urls.forEach(function (item) {_                if (item.url.startsWith("http") || item.url.startsWith("/")) return;_                item.url = window.location.href.replace("index.html", item.url).split('#')[0];_            });__            // If validatorUrl is not explicitly provided, disable the feature by setting to null_            if (!configObject.hasOwnProperty("validatorUrl"))_                configObject.validatorUrl = null__            // If oauth2RedirectUrl isn't specified, use the built-in default_            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))_                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;__            // Apply mandatory parameters_            configObject.dom_id = "#swagger-ui";_            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];_            configObject.layout = "StandaloneLayout";__            // Parse and add interceptor functions_            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');_            if (interceptors.RequestInterceptorFunction)_                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);_            if (interceptors.ResponseInterceptorFunction)_                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);__            // Begin Swagger UI call region__            const ui = SwaggerUIBundle(configObject);__            ui.initOAuth(oauthConfigObject);__            // End Swagger UI call region__            window.ui = ui_        }_    </script>_</body>_</html>___- 
 
2023-04-06 12:22:42,470 [4] ERROR App  
 ------------------------------------------------------------------------------------------------------------------- 
 
2023-04-06 12:22:46,489 [4] ERROR App  
 --------------------------------------06-04-2023 12:22:46--------------------------------------------------------------- 
 
2023-04-06 12:22:46,503 [4] ERROR App  
 Request and Response: Id: 06042023122245-RequestDateAndTime: 06-04-2023 12:22:45-Request: http localhost:1086/swagger/v1/swagger.json  __-ResponseDateAndTime: 06-04-2023 12:22:46-Response: 200: {_  "openapi": "3.0.1",_  "info": {_    "title": "Notifications API",_    "version": "v1"_  },_  "paths": {_    "/api/Notifications/GetEmptyMethod": {_      "get": {_        "tags": [_          "Notifications"_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/InsertNotifications": {_      "post": {_        "tags": [_          "Notifications"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "type": "array",_                "items": {_                  "$ref": "#/components/schemas/Notifications"_                }_              }_            },_            "text/json": {_              "schema": {_                "type": "array",_                "items": {_                  "$ref": "#/components/schemas/Notifications"_                }_              }_            },_            "application/*+json": {_              "schema": {_                "type": "array",_                "items": {_                  "$ref": "#/components/schemas/Notifications"_                }_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/GetNotificationsByResourceId": {_      "get": {_        "tags": [_          "Notifications"_        ],_        "parameters": [_          {_            "name": "pResourceId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/MarkAllAsReadByResourceId": {_      "post": {_        "tags": [_          "Notifications"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Notifications/MarkAsReadByNotificationId": {_      "post": {_        "tags": [_          "Notifications"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/NotificationMarkAsRead"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetAllStatusList": {_      "get": {_        "tags": [_          "Status"_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetStatusByID": {_      "get": {_        "tags": [_          "Status"_        ],_        "parameters": [_          {_            "name": "pStatusId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetStatusByCode": {_      "get": {_        "tags": [_          "Status"_        ],_        "parameters": [_          {_            "name": "pStatusCode",_            "in": "query",_            "schema": {_              "type": "string"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      },_      "post": {_        "tags": [_          "Status"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "type": "array",_                "items": {_                  "type": "string"_                }_              }_            },_            "text/json": {_              "schema": {_                "type": "array",_                "items": {_                  "type": "string"_                }_              }_            },_            "application/*+json": {_              "schema": {_                "type": "array",_                "items": {_                  "type": "string"_                }_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/Status/GetStatusByName": {_      "get": {_        "tags": [_          "Status"_        ],_        "parameters": [_          {_            "name": "pStatusCode",_            "in": "query",_            "schema": {_              "type": "string"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/AddSupportingDocuments": {_      "post": {_        "tags": [_          "SupportingDocuments"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/SupportingDocumentsView"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/SupportingDocumentsView"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/SupportingDocumentsView"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/DeleteDocumentById": {_      "get": {_        "tags": [_          "SupportingDocuments"_        ],_        "parameters": [_          {_            "name": "documentId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/GetDocumentBySourceIdAndType": {_      "post": {_        "tags": [_          "SupportingDocuments"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/DownloadDocumentById": {_      "get": {_        "tags": [_          "SupportingDocuments"_        ],_        "parameters": [_          {_            "name": "documentId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/SupportingDocuments/ApprovedDocumentsBySourceIdAndType": {_      "post": {_        "tags": [_          "SupportingDocuments"_        ],_        "requestBody": {_          "content": {_            "application/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "text/json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            },_            "application/*+json": {_              "schema": {_                "$ref": "#/components/schemas/SourceDocuments"_              }_            }_          }_        },_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/TimesheetConfigurationWeekDay/GetAllWeekDayList": {_      "get": {_        "tags": [_          "TimesheetConfigurationWeekDay"_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/TimesheetConfigurationWeekDay/GetWeekDayByID": {_      "get": {_        "tags": [_          "TimesheetConfigurationWeekDay"_        ],_        "parameters": [_          {_            "name": "pTimesheetConfigurationWeekdayId",_            "in": "query",_            "schema": {_              "type": "integer",_              "format": "int32"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    },_    "/api/TimesheetConfigurationWeekDay/GetWeekDayByName": {_      "get": {_        "tags": [_          "TimesheetConfigurationWeekDay"_        ],_        "parameters": [_          {_            "name": "pDayName",_            "in": "query",_            "schema": {_              "type": "string"_            }_          }_        ],_        "responses": {_          "200": {_            "description": "Success"_          }_        }_      }_    }_  },_  "components": {_    "schemas": {_      "DocumentDetails": {_        "type": "object",_        "properties": {_          "documentId": {_            "type": "integer",_            "format": "int32"_          },_          "documentCategory": {_            "type": "string",_            "nullable": true_          },_          "isApproved": {_            "type": "boolean"_          },_          "documentSize": {_            "type": "number",_            "format": "double"_          },_          "documentName": {_            "type": "string",_            "nullable": true_          },_          "documentType": {_            "type": "string",_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "DocumentsToUpload": {_        "type": "object",_        "properties": {_          "documentId": {_            "type": "integer",_            "format": "int32"_          },_          "documentCategory": {_            "type": "string",_            "nullable": true_          },_          "isApproved": {_            "type": "boolean"_          },_          "documentName": {_            "type": "string",_            "nullable": true_          },_          "documentSize": {_            "type": "number",_            "format": "double"_          },_          "documentAsBase64": {_            "type": "string",_            "nullable": true_          },_          "documentAsByteArray": {_            "type": "string",_            "format": "byte",_            "nullable": true_          },_          "path": {_            "type": "string",_            "nullable": true_          },_          "employeeId": {_            "type": "integer",_            "format": "int32"_          },_          "createdOn": {_            "type": "string",_            "format": "date-time",_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "NotificationMarkAsRead": {_        "type": "object",_        "properties": {_          "notificationId": {_            "type": "integer",_            "format": "int32"_          },_          "resourceId": {_            "type": "integer",_            "format": "int32"_          }_        },_        "additionalProperties": false_      },_      "Notifications": {_        "type": "object",_        "properties": {_          "notificationId": {_            "type": "integer",_            "format": "int32"_          },_          "fromId": {_            "type": "integer",_            "format": "int32"_          },_          "toId": {_            "type": "integer",_            "format": "int32"_          },_          "notificationSubject": {_            "type": "string",_            "nullable": true_          },_          "notificationBody": {_            "type": "string",_            "nullable": true_          },_          "markAsRead": {_            "type": "boolean"_          },_          "createdOn": {_            "type": "string",_            "format": "date-time"_          },_          "createdBy": {_            "type": "integer",_            "format": "int32"_          },_          "modifiedOn": {_            "type": "string",_            "format": "date-time",_            "nullable": true_          },_          "modifiedBy": {_            "type": "integer",_            "format": "int32",_            "nullable": true_          },_          "primaryKeyId": {_            "type": "integer",_            "format": "int32",_            "nullable": true_          },_          "buttonName": {_            "type": "string",_            "nullable": true_          },_          "sourceType": {_            "type": "string",_            "nullable": true_          },_          "data": {_            "type": "string",_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "SourceDocuments": {_        "type": "object",_        "properties": {_          "sourceId": {_            "type": "array",_            "items": {_              "type": "integer",_              "format": "int32"_            },_            "nullable": true_          },_          "sourceType": {_            "type": "array",_            "items": {_              "type": "string"_            },_            "nullable": true_          }_        },_        "additionalProperties": false_      },_      "SupportingDocumentsView": {_        "type": "object",_        "properties": {_          "listOfDocuments": {_            "type": "array",_            "items": {_              "$ref": "#/components/schemas/DocumentDetails"_            },_            "nullable": true_          },_          "sourceId": {_            "type": "integer",_            "format": "int32"_          },_          "sourceType": {_            "type": "string",_            "nullable": true_          },_          "createdBy": {_            "type": "integer",_            "format": "int32"_          },_          "baseDirectory": {_            "type": "string",_            "nullable": true_          },_          "documentType": {_            "type": "string",_            "nullable": true_          },_          "employeeId": {_            "type": "integer",_            "format": "int32"_          },_          "employeeDocumentList": {_            "type": "array",_            "items": {_              "$ref": "#/components/schemas/DocumentsToUpload"_            },_            "nullable": true_          },_          "proofDocumentId": {_            "type": "string",_            "format": "uuid"_          }_        },_        "additionalProperties": false_      }_    },_    "securitySchemes": {_      "Bearer": {_        "type": "apiKey",_        "description": "JWT Authorization header using the Bearer scheme.",_        "name": "Authorization",_        "in": "header"_      }_    }_  },_  "security": [_    {_      "Bearer": [ ]_    }_  ]_}__- 
 
2023-04-06 12:22:46,525 [4] ERROR App  
 ------------------------------------------------------------------------------------------------------------------- 
 
